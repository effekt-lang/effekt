# This is a copy-and-past version of ci.yml but additionally creating a release
name: Release Artifacts

on:
  push:
    tags:
      - "v*" # Push events to matching v*, i.e. v1.0, v20.15.10
jobs:
  build-jar:
    name: Build Effekt compiler and run tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: "true"

      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Set up NodeJS
        uses: actions/setup-node@v1
        with:
          node-version: "12.x"

      - name: Install MLton
        run: |
          curl -L https://github.com/MLton/mlton/releases/download/on-20210117-release/mlton-20210117-1.amd64-linux-glibc2.31.tgz --output mlton.tgz
          tar -xzf mlton.tgz
          mv mlton-20210117-1.amd64-linux-glibc2.31 $GITHUB_WORKSPACE/mlton
          chmod +x $GITHUB_WORKSPACE/mlton/bin/mlton
          echo "Trying to call directly"
          $GITHUB_WORKSPACE/mlton/bin/mlton
          echo "Adding mlton to path"
          echo "$GITHUB_WORKSPACE/mlton/bin" >> $GITHUB_PATH

      - name: Install Chez Scheme
        run: sudo apt-get install chezscheme

      - name: Run tests and assemble jar file
        run: sbt clean deploy

      - id: npmpackage
        name: Generate npm package
        run: mv $(npm pack) effekt.tgz

      - name: Upload the npm package
        uses: actions/upload-artifact@v1
        with:
          name: effekt-npm-package
          path: effekt.tgz

  build-native:
    name: Build native image
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [macos-13, ubuntu-latest, windows-latest]
        include:
          - os: macos-13
            uploaded_filename: effekt-arm64-apple-darwin
            local_path: effekt/jvm/target/native-image/effekt
          - os: ubuntu-latest
            uploaded_filename: effekt-x86_64-pc-linux
            local_path: effekt/jvm/target/native-image/effekt
          - os: windows-latest
            uploaded_filename: effekt-x86_64-pc-win32.exe
            local_path: effekt\jvm\target\native-image\effekt.exe
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: "true"

      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Set up NodeJS
        uses: actions/setup-node@v1
        with:
          node-version: "12.x"

      - name: Run tests and build native image
        run: sbt clean effektJVM/native-image

      - name: Upload Effekt native image
        uses: actions/upload-artifact@v2
        with:
          path: ${{ matrix.local_path }}
          name: ${{ matrix.uploaded_filename }}

  release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: [build-jar, build-native]
    steps:
      - name: Checkout code
        uses: actions/checkout@master

      - name: Download native binary windows artifact
        uses: actions/download-artifact@v1
        with:
          name: effekt-x86_64-pc-win32.exe
          path: distribution/

      - name: Download native binary macos artifact
        uses: actions/download-artifact@v1
        with:
          name: effekt-arm64-apple-darwin
          path: distribution/

      - name: Download native binary linux artifact
        uses: actions/download-artifact@v1
        with:
          name: effekt-x86_64-pc-linux
          path: distribution/

      - name: Download npm package
        uses: actions/download-artifact@v1
        with:
          name: effekt-npm-package
          path: distribution/

      - name: Create release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          name: Prerelease ${{ github.ref }}
          tag_name: ${{ github.ref }}
          body: Automatic release for ${{ github.ref }}
          files: |
            distribution/*
          draft: false
          prerelease: true
