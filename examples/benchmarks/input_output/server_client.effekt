import io
import io/error
import io/network
import io/time
import bytearray

def main() = {
  with on[IOError].panic
  val listener = listen("127.0.0.1", 8080);
  spawn(box {
    with on[IOError].panic
    accept(listener, box { connection =>
      with on[IOError].panic
      val message = "hello world"
      var buffer = bytearray::fromString(message)
      write(connection, buffer, 0, buffer.size())
      close(connection)
  })});

  val results = array::build(10) { i =>
    promise(box {
      with on[IOError].result
      wait(1000)
      val connection = connect("127.0.0.1", 8080)
      var buffer = bytearray::allocate(4096)
      val number = read(connection, buffer, 0, 4096)
      close(connection)
      number
    })
  };

  var total = 0;
  results.foreach { number =>
    total = total + number.await.value
  };

  shutdown(listener)
  
  println(total)
}
