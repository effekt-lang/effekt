import examples/benchmarks/runner

import bytearray
import io/error
import io/filesystem


def run(n: Int) = {

  val foldername = "/tmp/small_files/"
  val size = 4096

  val code = internal::mkdir(foldername)
  if (code < 0 && code != -17) {
    panic("failed to make directory")
  }

  val buffer = bytearray(size, 33.toByte)
  each(0, n) { i =>
    val filename = foldername ++ i.show ++ ".txt"
    val file = internal::openForWriting(filename)
    if (file < 0) {
      panic("failed open for writing")
    }
    val m = internal::write(file, buffer, 0, size, -1)
    if (m < buffer.size) {
      panic("failed write")
    }
    val _ = internal::close(file)
    ()
  }

  each(0, n) { i =>
    val filename = foldername ++ i.show ++ ".txt"
    val file = internal::openForReading(filename)
    if (file < 0) {
      panic("failed open for reading")
    }
    val m = internal::read(file, buffer, 0, size, -1)
    if (m < buffer.size) {
      panic("failed read")
    }
    val _ = internal::close(file)
    ()
  }

  return 0
}

def main() = benchmark(5){run}

