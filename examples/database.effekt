import immutable/list

interface DataBase {
    //will save name to database
    def addStudent(firstName: String, lastName: String): Unit

    //returns list of currently saved names
    def getStudents(): List[Student]

    //prints all names to console
    def printStudents(): Unit
}

record Student(
    firstName: String,
    lastName: String,
    id: Int
)

def myApplication(){ db: DataBase } = {
    db.addStudent("Max","Marschall");
    db.addStudent("Peter","Lustig");
    db.addStudent("Pierre","Drole");
    db.addStudent("Airan","SayÃ¼t");

    db.printStudents()
    println("db current state:")
    println(db.getStudents())
}

def main() = {

    //create database instance
    var names: List[Student] = [];
    var idCounter = 0;
    def firebase = new DataBase {
        def addStudent(firstName: String, name: String) = {
            val student = Student(firstName, name, idCounter);
            idCounter = idCounter + 1;
            names = Cons[Student](student, names)
        }
            
        
        def getStudents() = {
            return names;
        }
         
        def printStudents() = {
            names.foreach(){ name => println(name); ()}
        }
    };

    //run application
    myApplication(){ firebase }
}