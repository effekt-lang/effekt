type OneTwo {
  One(x: Int);
  Two(x: Int, y: Int)
}

type Nested {
  Foo(z: OneTwo)
}

def main() = {
  val a = Foo(Two(5, 9));
  a match {
    case Foo(One(u)) => println(u)
    case Foo(Two(v, w)) => println(v + w)
  }
}
