extern interface MyResource
extern resource foo: MyResource
extern {foo} def bar(): Int = default { 42 }
def user() = bar()

extern interface StackLocal
extern resource stack: StackLocal

// this does not really implement arrays, but tests whether `makeArray`
// will be in direct style.
extern interface Array[T]
extern {stack} def makeArray[T](size: Int): Array[T] at {stack} =
  js   "${size}"
  chez "${size}"

def parameter[T] {a: Array[T]} = {
  val f: Array[T] at {a} = box a;
  ()
}

def main() = {
  val f: () => Int at {foo} = user;
  val arr = makeArray[Int](10);
  inspect(arr);
  ()
}
