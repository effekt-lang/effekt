
interface Exists {
  def existsOp[E](): E
}
interface Forall[E] {
  def forallOp(): E
}

def handle[E](f: () => Unit / {Exists, Forall[E]} at io): Unit = try {
  f()
} with Exists {
  def existsOp[E]() = ()
} with Forall[E] {
  def forallOp() = ()
}

def main() = ()