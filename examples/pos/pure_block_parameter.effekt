type Mono { ConstructMono(n: Int) }
type Poly[A] { ConstructPoly(a: A) }

def hofMono { f : (Int) => Mono }: Mono = f(42)
def hofPoly { f : [A](A) => Poly[A] }: Poly[Int] = f(42)

def main() = {
   hofMono {ConstructMono};
   hofPoly {ConstructPoly}
}
