interface Exc { def throw(msg: String): Unit }
interface Info { def get(): String }

def rethrow {f: String => String} {p: {Exc} => Unit} {outerExc: Exc}: Unit =
  try {
      p {exc}
  } with exc: Exc {
      def throw(msg) = outerExc.throw(f(msg))
  }

def prependInfo {prog: {Exc} => Unit} {info: Info} {exc: Exc}: Unit =
  rethrow { (msg) => info.get() ++ " " ++ msg } {prog} {exc}


def main() =
  try {
      prependInfo { {exc: Exc} => exc.throw("Boom!") } {info} {exc}
  } with exc: Exc {
      def throw(msg) = println(msg)
  } with info: Info {
      def get() = resume("[INFO]")
  }
