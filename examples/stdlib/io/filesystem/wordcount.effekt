module wordcount

import char
import io
import io/error
import io/filesystem

record Output(chars: Int, words: Int, lines: Int)

def formatWith(output: Output, filename: String): String =
  output.lines.show ++ " " ++ output.words.show ++ " " ++ output.chars.show ++ " " ++ filename

def countWords(input: String): Output = {
  val len = input.length

  var chars = 0
  var words = 0
  var lines = 0
  var wasSpace = true

  each(0, len) { i =>
    val c = input.unsafeCharAt(i)
    val currentIsSpace = char::isWhitespace(c)

    chars = chars + 1

    if (wasSpace && not(currentIsSpace)) {
      words = words + 1
    }

    if (c == '\n') {
      lines = lines + 1
    }

    wasSpace = currentIsSpace
  }

  Output(chars, words, lines)
}

def main() = {
  with on[IOError].panic;

  val filename = "examples/stdlib/io/filesystem/demo_file1.txt"
  val contents = readFile(filename)
  val output = countWords(contents).formatWith(filename)
  println(output)
}