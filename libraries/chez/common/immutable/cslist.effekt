module immutable/cslist

// a chez scheme cons list
extern type CSList[A]
extern pure def cons[A](el: A, rest: CSList[A]): CSList[A] =
  "(cons el rest)"

extern pure def nil[A](): CSList[A] =
  "(list)"

extern pure def isEmpty[A](l: CSList[A]): Boolean =
  "(null? l)"

// unsafe!
extern pure def head[A](l: CSList[A]): A =
  "(car l)"

// unsafe!
extern pure def tail[A](l: CSList[A]): CSList[A] =
  "(cdr l)"