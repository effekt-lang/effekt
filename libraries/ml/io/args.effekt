module io/args

import effekt
import internal/option
import immutable/option
import immutable/list


// ================================================
//
// Conceptual Public Functions:
//   - commandLineArgs(): List[String]
//
// ================================================


// ml Ref of ml list
extern type Args

extern io def nativeArgs(): Args =
  ml "Sys.argv"

extern pure def length(a: Args): Int =
  ml "Array.length ${a}"

extern pure def argAt(a: Args, idx: Int): String =
  ml "${a}.(${idx})"

def commandLineArgs(): List[String] = {
  val args = nativeArgs()

  def go(i: Int, acc: List[String]): List[String] =
    // 0th argument is the binary name
    if (i > 0) go(i - 1, Cons(args.argAt(i), acc))
    else acc

  go (args.length - 1, Nil())
}
